     1                                  %define STDIN 0;   ввод - клава
     2                                  %define STDOUT 1;  вывод- экран
     3                                  %define SYS_WRITE  0x01
     4                                  %define SYS_READ   0x00
     5                                  
     6                                  section .data
     7                                  ;                       <<<     DATA     >>>
     8                                      ;----------------------------------------------------------
     9                                      ;Cообщения
    10 00000000 496E7075742076616C-         msg_1 db 'Input values:', 0xa, 0
    10 00000009 7565733A0A00       
    11                                      len_1 equ $ - msg_1
    12                                  
    13 0000000F 61203D2000                  msg_2 db 'a = ', 0
    14                                      len_2 equ $ - msg_2
    15                                  
    16 00000014 62203D2000                  msg_3 db 'b = ', 0
    17                                      len_3 equ $ - msg_3
    18                                      
    19 00000019 526573756C743A0A00          msg_4 db 'Result:', 0xa, 0
    20                                      len_4 equ $ - msg_4
    21                                  
    22 00000022 0A4552524F52212054-         msg_5 db 0xa, 'ERROR! Try again', 0xa
    22 0000002B 727920616761696E0A 
    23                                      len_5 equ $ - msg_5
    24                                      
    25                                      ;----------------------------------------------------------
    26                                      ;Буфер
    27 00000034 06                          len_inp db 6                ;ввод max 5 символов (65535) + '/n'
    28 00000035 0B                          len_out db 11               ;вывод max 10 символов (4294967296) + '/n'
    29 00000036 00                          len_cur db 0                ;реальная длина
    30 00000037 00                          sign db 0                   ;знак числа
    31                                      
    32 00000038 00<rep Bh>                  buffer times 11 db 0        ;введенные символы
    33                                      
    34                                      ;----------------------------------------------------------
    35                                      ;Переменные
    36 00000043 0000                        a dw 0
    37 00000045 0000                        b dw 0
    38 00000047 00000000                    res dd 0
    39                                  
    40                                  section .text
    41                                  global _start
    42                                  
    43                                  ;                        <<<     MAIN     >>>
    44                                  _start:
    45                                      ;----------------------------------------------------------
    46                                      ;Вывод 1-го сообщения
    47 00000000 48BE-                       mov rsi, msg_1              ;message to write
    47 00000002 [0000000000000000] 
    48 0000000A BA0F000000                  mov rdx,len_1               ;message length
    49 0000000F E88B000000                  call write
    50                                      
    51                                      ;----------------------------------------------------------
    52                                      ;Вывод 2-го сообщения
    53 00000014 48BE-                       mov rsi, msg_2
    53 00000016 [0F00000000000000] 
    54 0000001E BA05000000                  mov rdx, len_2
    55 00000023 E877000000                  call write
    56                                      
    57                                      ;----------------------------------------------------------
    58                                      ;Ввод a
    59 00000028 E87F000000                  call read
    60 0000002D E8C2000000                  call to_int                 ;преобразовать 'a' в число
    61 00000032 66890425[43000000]          mov word [a], ax            ; -> 'a'
    62 0000003A E85F000000                  call test
    63 0000003F E88D000000                  call buffer_cl              ;очистка буфера
    64                                      
    65                                      ;----------------------------------------------------------
    66                                      ;Вывод 3-го сообщения
    67 00000044 48BE-                       mov rsi, msg_3
    67 00000046 [1400000000000000] 
    68 0000004E BA05000000                  mov rdx,len_3
    69 00000053 E847000000                  call write
    70                                      
    71                                      ;----------------------------------------------------------
    72                                      ;Ввод b
    73 00000058 E84F000000                  call read
    74 0000005D E892000000                  call to_int
    75 00000062 66890425[45000000]          mov word [b], ax            ; -> 'b'
    76 0000006A E82F000000                  call test
    77 0000006F E85D000000                  call buffer_cl
    78                                      
    79                                      ;----------------------------------------------------------
    80                                      ;Рассчет значений
    81 00000074 E856010000                  call culculate              ; -> 'res'
    82 00000079 E820000000                  call test
    83 0000007E E8BC000000                  call to_str                 ;преобразовать 'res' в строку
    84                                      
    85                                      ;----------------------------------------------------------
    86                                      ;Вывод результата
    87 00000083 48BE-                       mov rsi, buffer
    87 00000085 [3800000000000000] 
    88 0000008D 8A1425[36000000]            mov dl, byte [len_cur]
    89 00000094 E806000000                  call write
    90                                  
    91                                      ;----------------------------------------------------------
    92                                      ;Выод из программы
    93 00000099 E825010000                  call exit
    94                                  
    95                                  
    96                                  ;                        <<<     FUNC     >>>
    97                                  test:
    98 0000009E C3                          ret
    99                                  ;--------------------------------------------------------------
   100                                  ;Функция вывода
   101                                  write:
   102 0000009F B801000000                  mov rax, SYS_WRITE  ;sys_write()
   103 000000A4 BF01000000                  mov rdi, STDOUT     ;file descriptor (stdout)
   104 000000A9 0F05                        syscall
   105 000000AB C3                          ret
   106                                  
   107                                  ;--------------------------------------------------------------
   108                                  ;Функция ввода
   109                                  read:
   110 000000AC B800000000                  mov eax, SYS_READ   ;sys_read()
   111 000000B1 BF00000000                  mov rdi, STDIN      ;file descriptor (stdin)
   112 000000B6 48BE-                       mov rsi, buffer     ;message to write
   112 000000B8 [3800000000000000] 
   113 000000C0 BA[34000000]                mov edx, len_inp    ;message length
   114 000000C5 0F05                        syscall             ;execute read(0, buffer, buf_size)
   115 000000C7 FEC8                        dec al
   116 000000C9 880425[36000000]            mov byte [len_cur], al
   117 000000D0 C3                          ret
   118                                  
   119                                  ;--------------------------------------------------------------
   120                                  ;Очистка буфера
   121                                  buffer_cl:
   122 000000D1 31C9                        xor ecx, ecx
   123 000000D3 8A0C25[36000000]            mov cl, byte [len_cur]
   124 000000DA B800000000                  mov eax, 0
   125                                      clear:
   126 000000DF 67C680[38000000]00              mov byte [buffer + eax], ''
   127 000000E7 FFC0                            inc eax
   128 000000E9 E2F4                            loop clear
   129 000000EB C60425[36000000]00          mov byte [len_cur], 0
   130 000000F3 C3                          ret
   131                                      
   132                                  ;--------------------------------------------------------------
   133                                  ;Функции преобраования в число
   134                                  to_int:
   135 000000F4 BA00000000                  mov edx, 0	                ;edx -> адрес строки
   136 000000F9 66BF0A00                    mov di,10                   ;di -> мноитель
   137 000000FD 31C9                        xor ecx, ecx
   138 000000FF 8A0C25[36000000]            mov cl, [len_cur]           ;cx -> счётчик цикла
   139                                      ;jecxz studw_error	        ;длина = 0 -> ошибка
   140 00000106 4831C0                      xor rax,rax
   141 00000109 4831DB                      xor rbx,rbx
   142                                  next_symb:
   143 0000010C 678A9A[38000000]                mov bl, [buffer + edx]  ;bl -> символ строки
   144 00000113 FFC2                            inc edx                 ;'+' адрес
   145 00000115 80FB30                          cmp bl,'0'
   146 00000118 0F8C8C000000                    jl error                ;код символа < '0' -> ошибка
   147 0000011E 80FB39                          cmp bl,'9'
   148 00000121 0F8F83000000                    jg error                ;код символа > '9' -> ошибка
   149 00000127 80EB30                          sub bl,'0'              ;преобразование в число
   150 0000012A 52                              push rdx
   151 0000012B 66F7E7                          mul di                  ;ax -> ax * 10
   152 0000012E 5A                              pop rdx
   153 0000012F 7279                            jc error	            ;результат > 2^16  -> ошибка
   154 00000131 6601D8                          add ax, bx
   155 00000134 7274                            jc error	            ;переполнение      -> ошибка
   156 00000136 E2D4                        loop next_symb	            ;цикл
   157 00000138 6683F8FF                    cmp ax, 65535	            ;пол.число         <= 65535
   158 0000013C 776C                        ja error                    ;больше            -> ошибка
   159 0000013E C3                          ret
   160                                  
   161                                  ;--------------------------------------------------------------
   162                                  ;Функции преобраования в строку
   163                                  to_str:
   164 0000013F C60425[37000000]00          mov byte [sign], 0
   165 00000147 8B0425[47000000]            mov eax, dword [res]
   166 0000014E B900000000                  mov ecx, 0
   167 00000153 85C0                        test eax, eax               ;проверка знака
   168 00000155 BB0A000000                  mov ebx, 10
   169 0000015A 790A                        jns str_no_sign
   170 0000015C C60425[37000000]01          mov byte [sign], 1          ;добавление знака
   171 00000164 F7D8                        neg eax
   172                                  str_no_sign:
   173 00000166 31D2                        xor edx, edx		        ;обнуление старшей части двойного слова
   174 00000168 F7F3                        div ebx		                ;edx:eax / ebx
   175 0000016A 6683C230                    add dx,'0'		            ;преобразование в код символа
   176 0000016E 6652                        push dx		                ;сохранение в стек
   177 00000170 FFC1                        inc ecx
   178 00000172 85C0                        test eax, eax		        ;проверка AX
   179 00000174 75F0                        jnz str_no_sign             ;частное не 0 -> икл
   180                                  if_sing_str:
   181 00000176 8A1425[37000000]            mov dl, byte [sign]
   182 0000017D 84D2                        test dl, dl
   183 0000017F 740A                        jz str
   184 00000181 67C680[38000000]2D          mov byte [buffer + eax], '-'
   185 00000189 FFC0                        inc eax
   186                                  str:		                    ;икл из стека
   187 0000018B 665A                        pop dx
   188 0000018D 678890[38000000]            mov byte [buffer + eax],dl
   189 00000194 FFC0                        inc eax		                ;'+' адрес буфера
   190 00000196 E2F3                        loop str
   191 00000198 67C680[38000000]0A          mov byte [buffer + eax], 0x0a
   192 000001A0 FFC0                        inc eax
   193 000001A2 880425[36000000]            mov byte [len_cur], al
   194 000001A9 C3                          ret
   195                                  
   196                                  ;--------------------------------------------------------------
   197                                  ;Функция вывода ошибки   
   198                                  error:
   199 000001AA 48BE-                       mov rsi, msg_5
   199 000001AC [2200000000000000] 
   200 000001B4 BA12000000                  mov rdx,len_5
   201 000001B9 E8E1FEFFFF                  call write
   202 000001BE E800000000                  call exit
   203                                      
   204                                  ;--------------------------------------------------------------
   205                                  ;Функция выода из прораммы
   206                                  exit:
   207 000001C3 BB00000000                  mov ebx, 0
   208 000001C8 B83C000000                  mov rax,60                  ;sys_exit()
   209 000001CD 0F05                        syscall
   210                                      
   211                                      
   212                                  ;                        <<<     CALC     >>>
   213                                  culculate:
   214 000001CF 4831C0                      xor rax, rax
   215 000001D2 4831DB                      xor rbx, rbx
   216 000001D5 4831C9                      xor rcx, rcx
   217 000001D8 4831D2                      xor rdx, rdx
   218                                          ; a*b/11     , a > b
   219                                          ; 11  , a = b
   220                                          ; a*a/b , a < b
   221 000001DB 668B0425[43000000]              mov ax, word [a]
   222 000001E3 668B1C25[45000000]              mov bx, word [b]
   223 000001EB 6639D8                          cmp ax, bx
   224 000001EE 7708                            ja @bg
   225 000001F0 7411                            je @eq
   226 000001F2 F7E8                    	    imul   eax            ; edx:eax = a*a
   227 000001F4 F7FB                        	idiv   ebx            ; eax = a*a/b
   228 000001F6 EB10                            jmp @end_if
   229                                          ; a > b
   230                                          @bg:
   231 000001F8 F7EB                    	        imul   ebx           ; eax:edx = a*b
   232 000001FA B90B000000              	        mov    ecx,    11    ; ecx = 11
   233 000001FF F7F9                            	idiv   ecx           ; eax:edx / eax
   234 00000201 EB05                            	jmp @end_if
   235                                          ; a = b
   236                                          @eq:
   237 00000203 B80B000000                          mov eax, 11
   238                                          @end_if:
   239 00000208 890425[47000000]                mov dword [res], eax
   240 0000020F C3                              ret
