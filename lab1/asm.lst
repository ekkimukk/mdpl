     1                                  section .data
     2                                  	extern Num  , Den  , Res
     3                                  	extern sia  , sib  , sic
     4                                  	extern usia , usib , usic
     5                                  	extern sca  , scb  , scc
     6                                  	extern usca , uscb , uscc
     7                                  
     8                                  section .text
     9                                  	global asm_signed_int
    10                                  	global asm_unsigned_int
    11                                  	global asm_signed_char
    12                                  	global asm_unsigned_char 
    13                                  
    14                                  asm_signed_int:
    15                                  	; numerator
    16 00000000 668B1C25[00000000]      	mov    bx,      [sib]    ; bx = b
    17 00000008 66B83700                	mov    ax,      55	 ; ax = 55
    18 0000000C 6629D8                  	sub    ax,      bx       ; ax = 55 - b
    19 0000000F 668B1C25[00000000]      	mov    bx,      [sia]    ; bx = a
    20 00000017 6601D8                  	add    ax,      bx       ; ax = 55 - b + a
    21 0000001A 66890425[00000000]      	mov    [Num],   ax       ; Num = 55 - b + a
    22                                  
    23                                      	; denominator
    24 00000022 66B8A8FF                	mov    ax,      -88      ; ax = -88
    25 00000026 6699                    	cwd			 ; ax:dx = -88
    26 00000028 668B1C25[00000000]      	mov    bx,      [sic]    ; bx = c
    27 00000030 66F7FB                  	idiv   bx                ; ax = -88 / c
    28 00000033 66FFC0                  	inc    ax                ; ax = -88 / c + 1
    29 00000036 66890425[00000000]      	mov    [Den],   ax       ; Den = 55 / c + 1
    30                                  
    31                                  	; result
    32 0000003E 668B0425[00000000]      	mov    ax,      [Num]    ; ax = 55 - b + a
    33 00000046 6699                    	cwd			 ; ax:dx = 55 - b + a
    34 00000048 668B1C25[00000000]      	mov    bx,      [Den]    ; bx = -88 / c + 1
    35 00000050 66F7FB                  	idiv   bx		 ; ax = num / den
    36 00000053 66890425[00000000]      	mov    [Res],   ax       ; Res = ax = Num / Den
    37 0000005B C3                      ret
    38                                  
    39                                  asm_unsigned_int:
    40                                  
    41                                  	; cleaning
    42 0000005C 31C0                    	xor    eax,     eax
    43 0000005E 31DB                    	xor    ebx,     ebx
    44 00000060 31C9                    	xor    ecx,     ecx
    45 00000062 31D2                    	xor    edx,     edx
    46                                  
    47                                  	; numerator
    48 00000064 668B1C25[00000000]      	mov    bx,      [usib]   ; bx = b
    49 0000006C 66B83700                	mov    ax,      55	 ; ax = 55
    50 00000070 6629D8                  	sub    ax,      bx       ; ax = 55 - b
    51 00000073 668B1C25[00000000]      	mov    bx,      [usia]   ; bx = a
    52                                  		
    53 0000007B 6699                    	cwd			 ; ax:dx
    54 0000007D 6689C1                  	mov    cx,      ax
    55 00000080 6689D0                  	mov    ax,      dx
    56 00000083 C1E010                  	shl    eax,     16
    57 00000086 6601C8                  	add    ax,      cx
    58                                  
    59 00000089 01D8                    	add    eax,     ebx     ; ax = 55 - b + a
    60 0000008B 890425[00000000]        	mov    [Num],   eax      ; Num = 55 - b + a
    61                                  
    62                                  	; denominator
    63 00000092 66B8A8FF                	mov    ax,      -88      ; ax = -88
    64 00000096 6699                    	cwd                      ; ax:dx = -88
    65 00000098 668B1C25[00000000]      	mov    bx,      [usic]   ; bx = c
    66 000000A0 66F7FB                  	idiv   bx                ; ax = -88 / c
    67 000000A3 66FFC0                  	inc    ax                ; ax = -88 / c + 1
    68 000000A6 66890425[00000000]      	mov    [Den],   ax       ; Den = ax = -88 / c + 1   
    69                                  
    70                                  	; result
    71 000000AE 668B0425[00000000]      	mov    ax,      [Num]    ; ax = 55 - b + a
    72 000000B6 6699                    	cwd			 ; ax:dx = 55 - b + a
    73 000000B8 668B1C25[00000000]      	mov    bx,      [Den]    ; bx = -88 / c + 1
    74 000000C0 66F7FB                  	idiv   bx		 ; ax = num / den
    75 000000C3 66890425[00000000]      	mov    [Res],   ax       ; Res = ax = Num / Den
    76 000000CB C3                      ret
    77                                  
    78                                  asm_signed_char:
    79                                  	
    80                                  	; cleaning
    81 000000CC 31C0                    	xor    eax,     eax
    82 000000CE 31DB                    	xor    ebx,     ebx
    83 000000D0 31C9                    	xor    ecx,     ecx
    84 000000D2 31D2                    	xor    edx,     edx
    85                                  
    86                                  	; numerator
    87 000000D4 8A0425[00000000]        	mov    al,   byte   [sca]    ; al = a
    88 000000DB 6698                    	cbw
    89 000000DD 6689C3                  	mov    bx,      ax       ; bx = a
    90 000000E0 66B83700                	mov    ax,      55       ; ax = 55
    91 000000E4 6601C3                  	add    bx,      ax       ; ax = 55 + a
    92 000000E7 8A0425[00000000]        	mov    al,   byte   [scb]    ; al = b
    93 000000EE 6698                    	cbw
    94 000000F0 6629C3                  	sub    bx,      ax       ; ax = 55 - b + a
    95 000000F3 66891C25[00000000]      	mov    [Num],   bx       ; Num = ax
    96                                  
    97                                  	; denominator
    98 000000FB 66B8A8FF                	mov    ax,      -88      ; ax = -88
    99 000000FF 8A1C25[00000000]        	mov    bl,      [scc]    ; bx = c
   100 00000106 F6FB                    	idiv   bl
   101 00000108 6698                    	cbw
   102 0000010A 66FFC0                  	inc    ax                ; ax = -88 / c + 1
   103 0000010D 66890425[00000000]      	mov    [Den],   ax       ; Den = ax = -88 / c + 1   
   104                                  
   105                                  	; result
   106 00000115 668B0425[00000000]      	mov    ax,      [Num]    ; ax = 55 - b + a
   107 0000011D 6699                    	cwd			 ; ax:dx = 55 - b + a
   108 0000011F 668B1C25[00000000]      	mov    bx,      [Den]    ; bx = -88 / c + 1
   109 00000127 66F7FB                  	idiv   bx		 ; ax = num / den
   110 0000012A 66890425[00000000]      	mov    [Res],   ax       ; Res = ax = Num / Den
   111 00000132 C3                      ret
   112                                  
